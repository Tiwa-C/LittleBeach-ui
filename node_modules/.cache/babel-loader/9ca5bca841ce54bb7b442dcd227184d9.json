{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    currentUser: null,\n    isFetching: false,\n    error: false\n  },\n  reducers: {\n    loginStart: state => {\n      state.isFetching = true;\n    },\n    loginSuccess: (state, action) => {\n      state.isFetching = false;\n      state.currentUser = action.payload;\n    },\n    loginFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["/Users/rungtiwa/Documents/shop/client/src/redux/userRedux.js"],"names":["createSlice","userSlice","name","initialState","currentUser","isFetching","error","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","actions","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,WAAW,EAAG,IADJ;AAEVC,IAAAA,UAAU,EAAE,KAFF;AAGVC,IAAAA,KAAK,EAAC;AAHI,GAFY;AAO1BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,EAAGC,KAAD,IAAW;AACnBA,MAAAA,KAAK,CAACJ,UAAN,GAAmB,IAAnB;AACH,KAHK;AAINK,IAAAA,YAAY,EAAE,CAACD,KAAD,EAAOE,MAAP,KAAkB;AAC5BF,MAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,MAAAA,KAAK,CAACL,WAAN,GAAoBO,MAAM,CAACC,OAA3B;AACH,KAPK;AAQNC,IAAAA,YAAY,EAAGJ,KAAD,IAAW;AACrBA,MAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AACH;AAXK;AAPgB,CAAD,CAA7B;AAsBA,OAAO,MAAM;AAAEE,EAAAA,UAAF;AAAcE,EAAAA,YAAd;AAA4BG,EAAAA;AAA5B,IAA4CZ,SAAS,CAACa,OAA5D;AACP,eAAeb,SAAS,CAACc,OAAzB","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\nconst userSlice = createSlice({\n    name: \"user\",\n    initialState: {\n        currentUser : null,\n        isFetching: false,\n        error:false\n    },\n    reducers: {\n        loginStart: (state) => {\n            state.isFetching = true\n        },\n        loginSuccess: (state,action) => {\n            state.isFetching = false;\n            state.currentUser = action.payload\n        },\n        loginFailure: (state) => {\n            state.isFetching = false;\n            state.error = true;\n        },\n    },\n});\n\nexport const { loginStart, loginSuccess, loginFailure} = userSlice.actions;\nexport default userSlice.reducer;"]},"metadata":{},"sourceType":"module"}